// Global Variables
var APIKey = '950e5f6ee11a03024c303d695a0203f1',
    city = $('#city-name'),
    weatherIcon = $('#weather-icon'),
    temp = $('#temperature'),
    humidity = $('#humidity'),
    windSpeed = $('#wind-speed'),
    UVIndex = $('#uv-index'),
    forecastGroup = $('.forecast-group'),
    userInput,
    userSearch = localStorage.getItem('city-searches');
    userSearch = JSON.parse(userSearch) || [];

renderSearchHistory();

// AJAX call function
function renderWeather(cityName) {

  // 5 Day Forecast API URL
  var forecastQueryURL = 'https://api.openweathermap.org/data/2.5/forecast?q=' + cityName + '&units=imperial&APPID=' + APIKey;

  // Current Westher API URL
  var weatherQueryURL = 'https://api.openweathermap.org/data/2.5/weather?q=' + cityName + '&units=imperial&APPID=' + APIKey;

//main AJAX Call - for weather
  $.ajax({
    url: weatherQueryURL,
    method: 'GET'
  }).then(function(response){

    console.log(response);

    // Storing Latitude and Longitude as variables for UV Index AJAX Call
    var Lat = 'lat=' + response.coord.lat,
        Lon = 'lon=' + response.coord.lon;

    // UV Index Query URL
    UVQUeryURL = 'https://api.openweathermap.org/data/2.5/uvi?' + '&APPID=' + APIKey + '&' + Lat + '&' + Lon;

    // UV Index AJAX Call
    $.ajax({
      url: UVQUeryURL,
      method: 'GET'
    }).then(function(UVResponse){

      console.log(UVResponse);

      // Rendering UV Index from AJAX Call
      UVIndex.text('UV Index: ' + UVResponse.value);
    });

    // 5 Day Forecast AJAX Call
    $.ajax({
      url: forecastQueryURL,
      method: 'GET'
    }).then(function(forecastResponse){

      console.log(forecastResponse);

      //getting current weather icon
      var currentWeatherIcon = forecastResponse.list[0].weather[0].icon;

      // populating weather icon with current weather icon
      weatherIcon.attr('src', 'https://openweathermap.org/img/wn/' + currentWeatherIcon + '@2x.png');

      //clearing forecast cards for every search
      forecastGroup.empty();

      //removing display: none from the forecast h2
      $('h2').removeClass('d-none');

      // looping through array generated by getting the forecast data
      for (var i = 0; i < forecastResponse.list.length; i++){

        // accounting for weather at a specific time of day
        if (forecastResponse.list[i].dt_txt.indexOf('15:00:00') !== -1) {

          // generating 5 cards based on the data at the specific time
          forecastGroup.append(`

            <div class='card forecast-card'>

              <img class='card-img-top'src=${'https://openweathermap.org/img/wn/' + forecastResponse.list[i].weather[0].icon + '@2x.png'}>

              <div class='card-body'>

                <h5 class='card-title'>${forecastResponse.list[i].dt_txt}</h5>

                <p class='card-text'>High: ${forecastResponse.list[i].main.tmp_max}℉</p>

                <p class='card-text'>Humidity: ${forecastResponse.list[i].main.humidity}%</p>

              </div>

            </div>`);

        }
      }
    });

    // removing display: none from current-weather-col due to differeng bg color
    $('.current-weather-col').removeClass('d-none');

    // emptying out text fields on every submit
    city.empty();
    temp.empty();
    humidity.empty();
    windSpeed.empty();

    // filling out text fields based on API Call Results
    city.text(response.name);
    temp.text('Temperature: ' + response.main.temp + '℉');
    humidity.text('Humidity: ' + response.main.humidity + '%');
    windSpeed.text('Wind Speed: ' + response.wind.speed + 'MPH');

  });
}

// initiates search function
$('.btn-primary').click(function(event){
  event.preventDefault;

  // defining userInput for AJAX Call
  var userInput = $('#city-search').val().trim();

  // accounting for blank input field and invalid response
  if((userInput === null) || (userInput === '')){
    alert('Please enter a valid city');
  }

  // storing UserInput, pushing to array and adding to localStorage
  //running AJAX call function on submit
  else {
    userSearch.push(userInput);
    localStorage.setItem('city-searches', JSON.stringify(userSearch));
    renderWeather(userInput);
    addPreviousSearch();
  }
});

// adding a button below the search bar with previoius searches for quick history
function addPreviousSearch() {
  var userInput = $('#city-search').val().trim(),
      previousSearch = $('<button>');
  previousSearch.addClass('search list-group-item list-group-item-action');
  previousSearch.attr('data-name', userInput);
  previousSearch.text(userInput.toUpperCase());
  $('.search-history').prepend(previousSearch);
}

// rendering buttons below search bar
function renderSearchHistory() {
    console.log(userSearch);

    // looping through the array in localStorage
    for (var i = 0; i < userSearch.length; i++) {

        // creating a button and adding specific classes
        var button = $('<button>');
        button.addClass('search list-group-item list-group-item-action');
        button.text(userSearch[i].toUpperCase());

        // button generated from most current search will always be on top
        $('.search-history').prepend(button);
    }
}

// quick search function
$('.list-group-item-action').click(function(event){
  event.preventDefault();

  // creating parameter for rendering weather
  var pastSearch = $(this).text();

  // previous buttons enact same function as initial search
  renderWeather(pastSearch);
});

// clearing fields function
$('.btn-secondary').click(function(){

  // clearing localStorage
  localStorage.clear();

  // clearing search history buttons
  $('.search-history').empty();

  // emptying array generated from localStorage that generates history on page load
  userSearch = [];

  // resetting all CSS to what it was before the first search
  city.empty();
  weatherIcon.attr('src', '');
  temp.empty();
  humidity.empty();
  windSpeed.empty();
  UVIndex.empty();
  forecastGroup.empty();
  $('h2').addClass('d-none');
  $('.current-weather-col').addClass('d-none');
});
